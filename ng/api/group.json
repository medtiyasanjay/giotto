{"image": "http://giottojs.org/media/giottoweb/giotto.png", "description": "A GiottoJS group maintainin a collection of drawing in memory. A group can be a g-element of an svg element or a canvas element.", "api_url": "http://giottojs.org/ng/api/group.json", "slug": "group", "name": "group", "head": {"description": "A GiottoJS group maintainin a collection of drawing in memory. A group can be a g-element of an svg element or a canvas element.", "title": "GiottoJS - group API", "twitter:card": "summary_large_image"}, "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\">\n<div class=\"page-header\">\n<h2>GiottoJS - group API</h2>\n</div>\n<div data-highlight>\n<p>A group is a collection af drawings in a <a href=\"/api/paper\">paper</a>.\nIt is created form a paper and it is always part of a paper.</p>\n<pre><code>group = paper.group(options);\n</code></pre>\n<p>where <code>options</code> is an object containing parameters to override the <code>paper</code> defaults.</p>\n<p><strong>Contents</strong></p>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#drawing\">Drawing</a><ul>\n<li><a href=\"#groupadddrawing\"># group.add(drawing)</a></li>\n<li><a href=\"#grouprender\"># group.render()</a></li>\n<li><a href=\"#groupclear\"># group.clear()</a></li>\n</ul>\n</li>\n<li><a href=\"#dimensions\">Dimensions</a><ul>\n<li><a href=\"#groupfactor\"># group.factor()</a></li>\n<li><a href=\"#groupsize\"># group.size()</a></li>\n<li><a href=\"#groupwidth\"># group.width()</a></li>\n<li><a href=\"#groupheight\"># group.height()</a></li>\n<li><a href=\"#groupinnerwidth\"># group.innerWidth()</a></li>\n<li><a href=\"#groupinnerheight\"># group.innerHeight()</a></li>\n<li><a href=\"#groupdimvalue\"># group.dim(value)</a></li>\n</ul>\n</li>\n<li><a href=\"#plugins\">Plugins</a><ul>\n<li><a href=\"#grouppathdata-opts\"># group.path(data, [opts])</a></li>\n<li><a href=\"#grouppointsdata-opts\"># group.points(data, [opts])</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"drawing\">Drawing</h1>\n<h3 id=\"groupadddrawing\"># group.add(drawing)</h3>\n<p>Add a new drawing to the group. The input can be a <a href=\"/api/drawing\">drawing</a> object or\na function which render the drawing:</p>\n<pre><code>group.add(function () {\n\n});\n</code></pre>\n<p>is equivalent to</p>\n<pre><code>group.add(drawing(group, function () {\n\n}));\n</code></pre>\n<p>This method returns the <code>drawing</code> object added to the group drawing collection.</p>\n<h3 id=\"grouprender\"># group.render()</h3>\n<p>Render the group by re-rendering all drawings. It returns the group for chaining.</p>\n<h3 id=\"groupclear\"># group.clear()</h3>\n<p>Clear all drawing from <code>g</code> or <code>canvas</code> element but keeps them still loaded in memory.\nIssuing <code>render</code> after the command will re-render all drawings. It returns the group for chaining.</p>\n<h1 id=\"dimensions\">Dimensions</h1>\n<h3 id=\"groupfactor\"># group.factor()</h3>\n<p>For <code>svg</code> it is 1, for <code>canvas</code> it depends on the resolution of your screen (for a mac-book pro retina display it is 2).</p>\n<h3 id=\"groupsize\"># group.size()</h3>\n<p>Returns a two elements array containing the pixel dimensions of the paper, including any margin. It includes the\n<a href=\"#groupfactor\">factor scaling</a>.</p>\n<h3 id=\"groupwidth\"># group.width()</h3>\n<p>Width in pixels of the group, equivalent to:</p>\n<pre><code>group.size()[0]\n</code></pre>\n<h3 id=\"groupheight\"># group.height()</h3>\n<p>Height in pixels of the group, equivalent to:</p>\n<pre><code>group.size()[1]\n</code></pre>\n<h3 id=\"groupinnerwidth\"># group.innerWidth()</h3>\n<p>Width in pixels of the group excluding left and right margins. Equivalent to:</p>\n<pre><code>var o = group.options();\ngroup.width() - group.factor()*(o.margin.left + o.margin.right);\n</code></pre>\n<h3 id=\"groupinnerheight\"># group.innerHeight()</h3>\n<p>Height in pixels of the group excluding top and bottom margins. Equivalent to:</p>\n<pre><code>var o = group.options();\ngroup.height() - group.factor()*(o.margin.top + o.margin.bottom);\n</code></pre>\n<h3 id=\"groupdimvalue\"># group.dim(value)</h3>\n<p>Convert <code>value</code> into the x-axis internal range. There are two possible conversions:</p>\n<ul>\n<li>Convert from a 0 to 1 range - The input must be a number between 0 and 1</li>\n<li>Convert from pixels - The input must be a string ending with <code>\"px\"</code></li>\n</ul>\n<p>For example, lets assume the internal\nrange is <code>[-5, 5]</code> and the <a href=\"#groupinnerwidth\">group.innerWidth()</a> is <code>500px</code>:</p>\n<pre><code>group.dim(0) === -5\ngroup.dim(1) === 5\ngroup.dim(0.5) === 0\ngroup.dim('250px') = 0\ngroup.dim('500px') = 5\n</code></pre>\n<h1 id=\"plugins\">Plugins</h1>\n<h3 id=\"grouppathdata-opts\"># group.path(data, [opts])</h3>\n<p>Create a new path and add it to the drawings collection. Returns the new path\ndrawing object which can be act upon via the <a href=\"/api/drawing\">drawing api</a>. The control\npoints of the path are given in the <code>data</code> array which default it is assumed to\nbe an array of two elements arrays <code>[x, y]</code>. This can be changed by modifying the\n<a href=\"/api/drawing#drawingxx\">drawing.x()</a> and <a href=\"/api/drawing#drawingyy\">drawing.y()</a>\naccessors.</p>\n<h3 id=\"grouppointsdata-opts\"># group.points(data, [opts])</h3>\n<p>Create a new <a href=\"/api/drawing\">drawing</a> of points from <code>data</code> which by default\nit is assumed to be an array of two elements arrays <code>[x, y]</code>.\nThis can be changed by modifying the\n<a href=\"/api/drawing#drawingxx\">drawing.x()</a> and <a href=\"/api/drawing#drawingyy\">drawing.y()</a>\naccessors.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2015 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>"}, "modified": "2015-01-11T12:46:28", "html_url": "http://giottojs.org/api/group", "title": "GiottoJS - group API", "content_type": "text/html", "site": {"media": "/media", "python_version": "3.4.2", "date": "2015-01-15T11-04-25", "lux_version": "0.1.2-alpha.1", "name": "Lux", "template_engine": null, "template": "partials/base.html", "year": 2015, "url": "http://giottojs.org"}}