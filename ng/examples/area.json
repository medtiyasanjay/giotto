{"html_url": "http://giottojs.org/examples/area", "site": {"template_engine": null, "date": "2014-12-26T22-18-28", "name": "Lux", "lux_version": "0.1.2-alpha.1", "year": 2014, "url": "http://giottojs.org", "media": "/media", "python_version": "3.4.2", "template": "partials/examples.html"}, "slug": "area", "description": "GiottoJS support area charts for both svg and canvas elements by extending d3js area to canvas.", "title": "Area Chart", "api_url": "http://giottojs.org/ng/examples/area.json", "date": "2014-12-26T00:00:00", "name": "area", "image": "http://giottojs.org/examples/area.png", "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\" data-highlight>\n<div class=\"page-header\">\n<h2>Area Chart</h2>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-10\">\n      <div data-options='gexamples.area1' style='width: 100%' giotto-chart></div>\n    </div>\n    <div class=\"col-sm-2 small\">\n      <lux-form data-options='luxforms.typeform_jZCiS'><script>if (!this.luxforms) {this.luxforms = {};} this.luxforms.typeform_jZCiS = {\"field\": {\"showLabels\": false, \"model\": \"TypeForm\", \"type\": \"form\", \"id\": \"typeform_jZCiS\"}, \"children\": [{\"field\": {\"type\": \"fieldset\"}, \"children\": [{\"field\": {\"value\": \"svg\", \"options\": [\"svg\", \"canvas\"], \"type\": \"select\", \"name\": \"type\", \"required\": true}}]}]};</script></lux-form>\n    </div>\n  </div>\n</div>\n\n<p>Area charts are enabled by setting the <code>area</code> parameter in the <code>line</code> entry\nto to <code>true</code>.</p>\n<p>Html:</p>\n<pre><code>&lt;div data-options='gexamples.area1' style='width: 100%' giotto-chart&gt;&lt;/div&gt;\n</code></pre>\n<h3>Javascript code</h3>\n<pre><code>gexamples.area1 = {\n    height: '60%',\n\n    min_height: 250,\n\n    // Override default x,y accessor for series\n    serie: {\n        x: function (d) {return d.time;},\n        y: function (d) {return d.value;}\n    },\n\n    grid: {\n        show: true,\n        fill: '#fff'\n    },\n\n    line: {\n        show: true,\n        area: true,\n        lineWidth: 1,\n        color: '#2ca25f',\n        fillOpacity: 0.3\n    },\n\n    data: function () {\n        return [randomPath(300)];\n    },\n\n    // Callback for angular directive\n    angular: function (chart, opts) {\n\n        opts.scope.$on('formFieldChange', function (e, form) {\n            opts.type = form.type;\n            chart.resume();\n        });\n    }\n};\n\n\nfunction randomPath (N) {\n    // Create a random path\n    var t = d3.range(0, N, 1),\n        \u03c3 = 0.1,\n        \u00b5 = 0,\n        data = [{time: 0, value: 0}],\n        norm = d3.random.normal(0, \u03c3),\n        dt;\n\n    for(var i=1; i&lt;t.length; i++) {\n        dt = t[i] - t[i-1];\n        dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n        data[i] = {\n            time: i,\n            value: data[i-1].value + dx\n        };\n    }\n    return data;\n}\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n<script>\n    gexamples.area1 = {\n        height: '60%',\n\n        min_height: 250,\n\n        // Override default x,y accessor for series\n        serie: {\n            x: function (d) {return d.time;},\n            y: function (d) {return d.value;}\n        },\n\n        grid: {\n            show: true,\n            fill: '#fff'\n        },\n\n        line: {\n            show: true,\n            area: true,\n            lineWidth: 1,\n            color: '#2ca25f',\n            fillOpacity: 0.3\n        },\n\n        data: function () {\n            return [randomPath(300)];\n        },\n\n        // Callback for angular directive\n        angular: function (chart, opts) {\n\n            opts.scope.$on('formFieldChange', function (e, form) {\n                opts.type = form.type;\n                chart.resume();\n            });\n        }\n    };\n\n\n    function randomPath (N) {\n        // Create a random path\n        var t = d3.range(0, N, 1),\n            \u03c3 = 0.1,\n            \u00b5 = 0,\n            data = [{time: 0, value: 0}],\n            norm = d3.random.normal(0, \u03c3),\n            dt;\n\n        for(var i=1; i<t.length; i++) {\n            dt = t[i] - t[i-1];\n            dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n            data[i] = {\n                time: i,\n                value: data[i-1].value + dx\n            };\n        }\n        return data;\n    }\n\n</script>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2014 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>\n"}, "head": {"twitter:card": "summary_large_image", "description": "GiottoJS support area charts for both svg and canvas elements by extending d3js area to canvas.", "title": "Area Chart", "author": ["Luca Sbardella"]}, "modified": "2014-12-26T22:15:28", "content_type": "text/html", "author": ["Luca Sbardella"]}