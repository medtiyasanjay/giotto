{"keywords": ["d3js", "visualization", "giottojs", "javascript", "svg", "canvas", "debt", "europe", "piechart"], "api_url": "http://giottojs.org/ng/examples/europedebt.json", "content_type": "text/html", "name": "europedebt", "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\" data-highlight>\n<div class=\"page-header\">\n<h2>Central Government Debt in Europe</h2>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-10\">\n    <div data-options='gexamples.europedebt' class=\"center-block\" giotto-chart></div>\n    <p class=\"text-right small\">Source: <a href=\"http://ec.europa.eu/eurostat\" target=\"self\">Eurostat</a></p>\n    </div>\n    <div class=\"col-sm-2 small\">\n      <lux-form data-options='luxforms.typeform_gIVxc'><script>if (!this.luxforms) {this.luxforms = {};} this.luxforms.typeform_gIVxc = {\"field\": {\"model\": \"TypeForm\", \"type\": \"form\", \"id\": \"typeform_gIVxc\", \"showLabels\": false}, \"children\": [{\"field\": {\"type\": \"fieldset\"}, \"children\": [{\"field\": {\"value\": \"svg\", \"required\": true, \"type\": \"select\", \"name\": \"type\", \"options\": [\"svg\", \"canvas\"]}}]}]};</script></lux-form>\n      <p>Right click on the chart for additional options</p>\n    </div>\n  </div>\n</div>\n\n<p>Central Government Debt in Europe in 2012 and 2013. This example shows how GiottoJS handles several labels without overlapping them. In addition, a custom drawing is displaied in the center of the pie chart displaying the total debt, almost 10 trillion euros! Germany is the only big European country which decreased its debt in 2013 from the 2012 level.</p>\n<p>Html:</p>\n<pre><code>&lt;div data-options='gexamples.europedebt' giotto-chart&gt;&lt;/div&gt;\n</code></pre>\n<h3>Javascript code</h3>\n<pre><code>gexamples.europedebt = {\n    height: '60%',\n\n    colors: function () {\n        return d3.colorbrewer.YlOrBr[9].slice().reverse();\n    },\n\n    tooltip: {\n      show: true\n    },\n\n    pie: {\n        show: true,\n        labels: {\n            position: 'outside'\n        },\n        innerRadius: 0.7,\n        cornerRadius: 0.01,\n        padAngle: 0.5,\n        fillOpacity: 0.7,\n        active: {\n            fillOpacity: 1\n        },\n        transition: {\n            duration: 1000\n        },\n        formatY: function (d) {\n            return '\u20ac ' + d3.format(',.0f')(d) + 'M';\n        },\n        x: function (d) {return d[1];},\n        y: function (d) {return d[2];}\n    },\n\n    // Custom entry for diplaying the year and the total ammount of debt\n    custom: {\n        show: function () {\n            // display the year and total debt\n            var group = this.group(),\n                width = group.innerWidth(),\n                height = group.innerHeight(),\n                data = this.data(),\n                size = 30*group.factor(),\n                dy = 10*group.factor(),\n                total = 0;\n            data.forEach(function (d) {\n                total += d[2];\n            });\n            total = gexamples.europedebt.pie.formatY(total);\n            if (group.type() === 'svg') {\n                var uid = this.uid() + 'info',\n                    el = group.element().selectAll('#' + uid).data([true]);\n                el.enter().append('g').attr('id', uid);\n                el.attr('transform', 'translate(' + width/2 + ',' + (height - size)/2 + ')');\n                var text = el.selectAll('text').data([this.label() + ' total', total]);\n                text.enter().append('text');\n                d3.giotto.svg.font(text, {size: size + 'px', weight: 'bold'});\n                text.attr('text-anchor', 'middle')\n                    .text(function (d) {return d;})\n                    .attr('y', function (d, i) {return (size + dy)*i;});\n            } else {\n                var ctx = group.context();\n                ctx.save();\n                ctx.translate(width/2, (height - size)/2);\n                ctx.font = d3.giotto.canvas.font(ctx, {size: size + 'px', weight: 'bold'});\n                ctx.textAlign = 'center';\n                ctx.fillText(this.label() + ' total', 0, 0);\n                ctx.fillText(total, 0, size + dy);\n                ctx.restore();\n            }\n        }\n    },\n\n    onInit: function (chart, opts) {\n        var current = 2013;\n            yeardata = {2012: [], 2013: []};\n\n        debtdata.sort(function (a, b) {return d3.descending(a[2],b[2]);}).forEach(function (data) {\n            yeardata[data[0]].push(data);\n        });\n\n        function animate () {\n            current = 2013 + 2012 - current;\n            data = {label: current + '',\n                    data: yeardata[current]};\n\n            if (chart.numSeries()) {\n                chart.each(function (serie) {\n                    serie.label = data.label;\n                    serie.data(data.data);\n                });\n                chart.resume();\n            } else\n                opts.data = [data];\n            d3.timer(animate, 4*opts.pie.transition.duration);\n            return true;\n        }\n\n        animate();\n    },\n\n    // Callback for angular directive\n    angular: function (chart, opts) {\n\n        opts.scope.$on('formFieldChange', function (e, form, field) {\n            if (field === 'type') {\n                opts.type = form[field];\n                chart.resume();\n            }\n        });\n    }\n};\n\nvar debtdata = [[2012,\"Belgium\",342980.3],\n                [2013,\"Belgium\",351255.9],\n                [2012,\"Bulgaria\",7172.1],\n                [2013,\"Bulgaria\",7416.3],\n                [2012,\"Czech Republic\",66335.7],\n                [2013,\"Czech Republic\",61236.6],\n                [2012,\"Denmark\",93842.9],\n                [2013,\"Denmark\",92733.2],\n                [2012,\"Germany\",1369103.5],\n                [2013,\"Germany\",1372828.8],\n                [2012,\"Estonia\",1228.2],\n                [2013,\"Estonia\",1310.5],\n                [2012,\"Ireland\",191779.3],\n                [2013,\"Ireland\",202337.1],\n                [2012,\"Spain\",760195.2],\n                [2013,\"Spain\",836192.7],\n                [2012,\"France\",1522936.9],\n                [2013,\"France\",1595410.5],\n                [2012,\"Croatia\",23737.5],\n                [2013,\"Croatia\",28215.9],\n                [2012,\"Italy\",1882380.0],\n                [2013,\"Italy\",1970530.3],\n                [2012,\"Latvia\",8808.8],\n                [2013,\"Latvia\",8626.8],\n                [2012,\"Lithuania\",12335.1],\n                [2013,\"Lithuania\",12640.6],\n                [2012,\"Luxembourg\",8593.3],\n                [2013,\"Luxembourg\",9769.9],\n                [2012,\"Hungary\",73102.3],\n                [2013,\"Hungary\",76213.1],\n                [2012,\"Malta\",4867.1],\n                [2013,\"Malta\",5238.8],\n                [2012,\"Netherlands\",387007.0],\n                [2013,\"Netherlands\",404294.0],\n                [2012,\"Austria\",208874.3],\n                [2013,\"Austria\",214382.0],\n                [2012,\"Poland\",207248.8],\n                [2013,\"Poland\",214904.7],\n                [2012,\"Portugal\",204193.8],\n                [2013,\"Portugal\",213973.4],\n                [2012,\"Romania\",48383.4],\n                [2013,\"Romania\",52402.0],\n                [2012,\"Slovenia\",18618.0],\n                [2013,\"Slovenia\",24752.9],\n                [2012,\"Slovakia\",37280.8],\n                [2013,\"Slovakia\",39878.2],\n                [2012,\"Finland\",93900.0],\n                [2013,\"Finland\",98905.0],\n                [2012,\"Sweden\",130857.7],\n                [2013,\"Sweden\",140075.6],\n                [2012,\"United Kingdom\",1680297.8],\n                [2013,\"United Kingdom\",1732269.4]];\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n<script>\n\n    gexamples.europedebt = {\n        height: '60%',\n\n        colors: function () {\n            return d3.colorbrewer.YlOrBr[9].slice().reverse();\n        },\n\n        tooltip: {\n          show: true\n        },\n\n        pie: {\n            show: true,\n            labels: {\n                position: 'outside'\n            },\n            innerRadius: 0.7,\n            cornerRadius: 0.01,\n            padAngle: 0.5,\n            fillOpacity: 0.7,\n            active: {\n                fillOpacity: 1\n            },\n            transition: {\n                duration: 1000\n            },\n            formatY: function (d) {\n                return '\u20ac ' + d3.format(',.0f')(d) + 'M';\n            },\n            x: function (d) {return d[1];},\n            y: function (d) {return d[2];}\n        },\n\n        // Custom entry for diplaying the year and the total ammount of debt\n        custom: {\n            show: function () {\n                // display the year and total debt\n                var group = this.group(),\n                    width = group.innerWidth(),\n                    height = group.innerHeight(),\n                    data = this.data(),\n                    size = 30*group.factor(),\n                    dy = 10*group.factor(),\n                    total = 0;\n                data.forEach(function (d) {\n                    total += d[2];\n                });\n                total = gexamples.europedebt.pie.formatY(total);\n                if (group.type() === 'svg') {\n                    var uid = this.uid() + 'info',\n                        el = group.element().selectAll('#' + uid).data([true]);\n                    el.enter().append('g').attr('id', uid);\n                    el.attr('transform', 'translate(' + width/2 + ',' + (height - size)/2 + ')');\n                    var text = el.selectAll('text').data([this.label() + ' total', total]);\n                    text.enter().append('text');\n                    d3.giotto.svg.font(text, {size: size + 'px', weight: 'bold'});\n                    text.attr('text-anchor', 'middle')\n                        .text(function (d) {return d;})\n                        .attr('y', function (d, i) {return (size + dy)*i;});\n                } else {\n                    var ctx = group.context();\n                    ctx.save();\n                    ctx.translate(width/2, (height - size)/2);\n                    ctx.font = d3.giotto.canvas.font(ctx, {size: size + 'px', weight: 'bold'});\n                    ctx.textAlign = 'center';\n                    ctx.fillText(this.label() + ' total', 0, 0);\n                    ctx.fillText(total, 0, size + dy);\n                    ctx.restore();\n                }\n            }\n        },\n\n        onInit: function (chart, opts) {\n            var current = 2013;\n                yeardata = {2012: [], 2013: []};\n\n            debtdata.sort(function (a, b) {return d3.descending(a[2],b[2]);}).forEach(function (data) {\n                yeardata[data[0]].push(data);\n            });\n\n            function animate () {\n                current = 2013 + 2012 - current;\n                data = {label: current + '',\n                        data: yeardata[current]};\n\n                if (chart.numSeries()) {\n                    chart.each(function (serie) {\n                        serie.label = data.label;\n                        serie.data(data.data);\n                    });\n                    chart.resume();\n                } else\n                    opts.data = [data];\n                d3.timer(animate, 4*opts.pie.transition.duration);\n                return true;\n            }\n\n            animate();\n        },\n\n        // Callback for angular directive\n        angular: function (chart, opts) {\n\n            opts.scope.$on('formFieldChange', function (e, form, field) {\n                if (field === 'type') {\n                    opts.type = form[field];\n                    chart.resume();\n                }\n            });\n        }\n    };\n\n    var debtdata = [[2012,\"Belgium\",342980.3],\n                    [2013,\"Belgium\",351255.9],\n                    [2012,\"Bulgaria\",7172.1],\n                    [2013,\"Bulgaria\",7416.3],\n                    [2012,\"Czech Republic\",66335.7],\n                    [2013,\"Czech Republic\",61236.6],\n                    [2012,\"Denmark\",93842.9],\n                    [2013,\"Denmark\",92733.2],\n                    [2012,\"Germany\",1369103.5],\n                    [2013,\"Germany\",1372828.8],\n                    [2012,\"Estonia\",1228.2],\n                    [2013,\"Estonia\",1310.5],\n                    [2012,\"Ireland\",191779.3],\n                    [2013,\"Ireland\",202337.1],\n                    [2012,\"Spain\",760195.2],\n                    [2013,\"Spain\",836192.7],\n                    [2012,\"France\",1522936.9],\n                    [2013,\"France\",1595410.5],\n                    [2012,\"Croatia\",23737.5],\n                    [2013,\"Croatia\",28215.9],\n                    [2012,\"Italy\",1882380.0],\n                    [2013,\"Italy\",1970530.3],\n                    [2012,\"Latvia\",8808.8],\n                    [2013,\"Latvia\",8626.8],\n                    [2012,\"Lithuania\",12335.1],\n                    [2013,\"Lithuania\",12640.6],\n                    [2012,\"Luxembourg\",8593.3],\n                    [2013,\"Luxembourg\",9769.9],\n                    [2012,\"Hungary\",73102.3],\n                    [2013,\"Hungary\",76213.1],\n                    [2012,\"Malta\",4867.1],\n                    [2013,\"Malta\",5238.8],\n                    [2012,\"Netherlands\",387007.0],\n                    [2013,\"Netherlands\",404294.0],\n                    [2012,\"Austria\",208874.3],\n                    [2013,\"Austria\",214382.0],\n                    [2012,\"Poland\",207248.8],\n                    [2013,\"Poland\",214904.7],\n                    [2012,\"Portugal\",204193.8],\n                    [2013,\"Portugal\",213973.4],\n                    [2012,\"Romania\",48383.4],\n                    [2013,\"Romania\",52402.0],\n                    [2012,\"Slovenia\",18618.0],\n                    [2013,\"Slovenia\",24752.9],\n                    [2012,\"Slovakia\",37280.8],\n                    [2013,\"Slovakia\",39878.2],\n                    [2012,\"Finland\",93900.0],\n                    [2013,\"Finland\",98905.0],\n                    [2012,\"Sweden\",130857.7],\n                    [2013,\"Sweden\",140075.6],\n                    [2012,\"United Kingdom\",1680297.8],\n                    [2013,\"United Kingdom\",1732269.4]];\n\n</script>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2015 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>\n"}, "title": "Central Government Debt in Europe", "author": ["Luca Sbardella"], "head": {"author": ["Luca Sbardella"], "keywords": ["d3js", "visualization", "giottojs", "javascript", "svg", "canvas", "debt", "europe", "piechart"], "description": "Central Government Debt in Europe in 2012 and 2013. This example shows how GiottoJS handles several labels without overlapping them.", "twitter:card": "summary_large_image", "title": "Central Government Debt in Europe"}, "description": "Central Government Debt in Europe in 2012 and 2013. This example shows how GiottoJS handles several labels without overlapping them.", "html_url": "http://giottojs.org/examples/europedebt", "date": "2015-01-09T00:00:00", "modified": "2015-01-09T12:03:50", "site": {"year": 2015, "date": "2015-01-09T12-48-09", "media": "/media", "lux_version": "0.1.2-alpha.1", "template": "partials/examples.html", "url": "http://giottojs.org", "template_engine": null, "name": "Lux", "python_version": "3.4.2"}, "image": "http://giottojs.org/examples/europedebt.png", "slug": "europedebt"}