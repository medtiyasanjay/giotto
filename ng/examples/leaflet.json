{"title": "Leaflet example", "head": {"description": "A list of GiottoJS examples", "title": "Leaflet example", "twitter:card": "summary_large_image"}, "name": "leaflet", "content_type": "text/html", "site": {"url": "http://giottojs.org", "python_version": "3.4.2", "date": "2014-12-18T11-57-52", "name": "Lux", "lux_version": "0.1.2-alpha.1", "year": 2014, "media": "/media", "template": "partials/examples.html", "template_engine": null}, "modified": "2014-11-28T21:34:04", "description": "A list of GiottoJS examples", "slug": "leaflet", "api_url": "http://giottojs.org/ng/examples/leaflet.json", "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\" data-highlight>\n<div class=\"page-header\">\n<h2>Leaflet example</h2>\n</div>\n\n<h3>Javascript code</h3>\n<pre><code>gexamples.leaflet1 = {\n\n    tile: 'leaflet',\n\n    center: [32, 103.14],\n\n    wheelZoom: false,\n\n    onInit: function (viz) {\n        var http = 'http://{s}.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={token}',\n            MB_ATTR = 'Map data &amp;copy; &lt;a href=\"http://openstreetmap.org\"&gt;OpenStreetMap&lt;/a&gt; contributors, ' +\n                      '&lt;a href=\"http://creativecommons.org/licenses/by-sa/2.0/\"&gt;CC-BY-SA&lt;/a&gt;, ' +\n                      'Imagery \u00a9 &lt;a href=\"http://mapbox.com\"&gt;Mapbox&lt;/a&gt;',\n            opts = viz.options();\n\n        viz.on('tick.main', function () {\n            //\n            // Add layer to the map\n            viz.stop().addLayer(http, {\n                attribution: MB_ATTR,\n                id: 'lsbardel.jlpfdli1',\n                token: 'pk.eyJ1IjoibHNiYXJkZWwiLCJhIjoidHltTnFxRSJ9.Mx5To8eaHJjq8OS6usKV8g'\n            });\n\n            if (opts.src) {\n\n                g.require(['topojson'], function (topojson) {\n\n                    d3.json(opts.src, function(topology) {\n                        var collection = topojson.feature(topology, topology.objects.china_adm1),\n                            layer = viz.addLayer(collection, onDraw),\n                            feature = layer.element.attr(\"class\", \"china-wine\").selectAll(\"path\")\n                                            .data(collection.features)\n                                            .enter().append(\"path\")\n                                            .on('click', function (d) {\n                                                var hash = d.properties.name,\n                                                    scope = viz.attrs.scope;\n                                                if (scope &amp;&amp; scope.$location) {\n                                                    scope.$location.hash(lux.slugify(hash));\n                                                    scope.$apply();\n                                                }\n                                            }),\n                            text = layer.element.selectAll(\"text\")\n                                        .data(collection.features)\n                                        .enter()\n                                        .append(\"svg:text\")\n                                        .text(function (d) {\n                                            return d.properties.name;\n                                        })\n                                        .attr(\"text-anchor\",\"middle\")\n                                        .attr('font-size','6pt');\n                        layer.draw();\n\n                        function onDraw (svgLayer) {\n                            feature.attr(\"d\", svgLayer.path);\n                            text.attr(\"x\", function(d) {\n                                return layer.path.centroid(d)[0];\n                            }).attr(\"y\", function(d) {\n                                return layer.path.centroid(d)[1];\n                            });\n                        }\n                    });\n                });\n            }\n        });\n    }\n};\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n<script>\n    gexamples.leaflet1 = {\n\n        tile: 'leaflet',\n\n        center: [32, 103.14],\n\n        wheelZoom: false,\n\n        onInit: function (viz) {\n            var http = 'http://{s}.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={token}',\n                MB_ATTR = 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, ' +\n                          '<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n                          'Imagery \u00a9 <a href=\"http://mapbox.com\">Mapbox</a>',\n                opts = viz.options();\n\n            viz.on('tick.main', function () {\n                //\n                // Add layer to the map\n                viz.stop().addLayer(http, {\n                    attribution: MB_ATTR,\n                    id: 'lsbardel.jlpfdli1',\n                    token: 'pk.eyJ1IjoibHNiYXJkZWwiLCJhIjoidHltTnFxRSJ9.Mx5To8eaHJjq8OS6usKV8g'\n                });\n\n                if (opts.src) {\n\n                    g.require(['topojson'], function (topojson) {\n\n                        d3.json(opts.src, function(topology) {\n                            var collection = topojson.feature(topology, topology.objects.china_adm1),\n                                layer = viz.addLayer(collection, onDraw),\n                                feature = layer.element.attr(\"class\", \"china-wine\").selectAll(\"path\")\n                                                .data(collection.features)\n                                                .enter().append(\"path\")\n                                                .on('click', function (d) {\n                                                    var hash = d.properties.name,\n                                                        scope = viz.attrs.scope;\n                                                    if (scope && scope.$location) {\n                                                        scope.$location.hash(lux.slugify(hash));\n                                                        scope.$apply();\n                                                    }\n                                                }),\n                                text = layer.element.selectAll(\"text\")\n                                            .data(collection.features)\n                                            .enter()\n                                            .append(\"svg:text\")\n                                            .text(function (d) {\n                                                return d.properties.name;\n                                            })\n                                            .attr(\"text-anchor\",\"middle\")\n                                            .attr('font-size','6pt');\n                            layer.draw();\n\n                            function onDraw (svgLayer) {\n                                feature.attr(\"d\", svgLayer.path);\n                                text.attr(\"x\", function(d) {\n                                    return layer.path.centroid(d)[0];\n                                }).attr(\"y\", function(d) {\n                                    return layer.path.centroid(d)[1];\n                                });\n                            }\n                        });\n                    });\n                }\n            });\n        }\n    };\n\n</script>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2014 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>\n"}, "html_url": "http://giottojs.org/examples/leaflet"}