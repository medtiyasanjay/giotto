{"title": "Multiple Area Charts with Gradient", "image": "http://giottojs.org/examples/multiarea.png", "name": "multiarea", "date": "2014-12-30T00:00:00", "head": {"title": "Multiple Area Charts with Gradient", "twitter:card": "summary_large_image", "description": "Multiple area charts for both svg and canvas elements are supported by rendering areas in a background element.", "author": ["Luca Sbardella"]}, "author": ["Luca Sbardella"], "content_type": "text/html", "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\" data-highlight>\n<div class=\"page-header\">\n<h2>Multiple Area Charts with Gradient</h2>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-10\">\n      <div data-options='gexamples.area3' style='width: 100%' giotto-chart></div>\n    </div>\n    <div class=\"col-sm-2 small\">\n      <lux-form data-options='luxforms.typeform_yP60b'><script>if (!this.luxforms) {this.luxforms = {};} this.luxforms.typeform_yP60b = {\"field\": {\"model\": \"TypeForm\", \"showLabels\": false, \"id\": \"typeform_yP60b\", \"type\": \"form\"}, \"children\": [{\"field\": {\"type\": \"fieldset\"}, \"children\": [{\"field\": {\"required\": true, \"name\": \"type\", \"value\": \"svg\", \"options\": [\"svg\", \"canvas\"], \"type\": \"select\"}}]}, {\"field\": {\"name\": \"randomise\", \"type\": \"button\", \"label\": \"randomise\"}}]};</script></lux-form>\n    </div>\n  </div>\n</div>\n\n<p>Area charts are enabled by setting the <code>area</code> parameter in the <code>line</code> entry\nto to <code>true</code>. The <code>gradient</code> entry can specify the second color of the\ngradient (<code>fill</code> specifies the first color of the gradient and by default\nit is picked by the <a href=\"/api/paper#paperpickcolor\">paper.pickColour</a> method).</p>\n<p>Html:</p>\n<pre><code>&lt;div data-options='gexamples.area2' style='width: 100%' giotto-chart&gt;&lt;/div&gt;\n</code></pre>\n<h3>Javascript code</h3>\n<pre><code>gexamples.area3 = {\n    height: '60%',\n    min_height: 250,\n\n    grid: {\n        show: true,\n        fill: '#fff',\n        fillOpacity: 1\n    },\n\n    line: {\n        show: true,\n        area: true,\n        lineWidth: 2,\n        fillOpacity: 0.5,\n        gradient: '#fff',\n        transition: {\n            duration: 500\n        },\n        active: {\n            fillOpacity: 1,\n            symbol: 'circle',\n            size: '10px'\n        }\n    },\n\n    legend: {\n        show: true,\n        position: 'top-left',\n        margin: 50\n    },\n\n    tooltip: {\n        show: true\n    },\n\n    data: function () {\n        return [randomPath(300), randomPath(300), randomPath(300)];\n    },\n\n    // Callback for angular directive\n    angular: function (chart, opts) {\n\n        opts.scope.$on('formFieldChange', function (e, form) {\n            opts.type = form.type;\n            chart.resume();\n        });\n\n        opts.scope.$on('randomiseClick', function (e) {\n            e.preventDefault();\n            chart.each(function (serie) {\n                serie.data(randomPath(300));\n            });\n            chart.resume();\n        });\n    }\n};\n\n\nfunction randomPath (N) {\n    // Create a random path\n    var t = d3.range(0, N, 1),\n        \u03c3 = 1,\n        \u00b5 = 0.1,\n        data = [[0, 1]],\n        norm = d3.random.normal(0, \u03c3),\n        dt;\n\n    for(var i=1; i&lt;t.length; i++) {\n        dt = t[i] - t[i-1];\n        dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n        data[i] = [i, data[i-1][1] + dx];\n    }\n    return data;\n}\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n<script>\n\n    gexamples.area3 = {\n        height: '60%',\n        min_height: 250,\n\n        grid: {\n            show: true,\n            fill: '#fff',\n            fillOpacity: 1\n        },\n\n        line: {\n            show: true,\n            area: true,\n            lineWidth: 2,\n            fillOpacity: 0.5,\n            gradient: '#fff',\n            transition: {\n                duration: 500\n            },\n            active: {\n                fillOpacity: 1,\n                symbol: 'circle',\n                size: '10px'\n            }\n        },\n\n        legend: {\n            show: true,\n            position: 'top-left',\n            margin: 50\n        },\n\n        tooltip: {\n            show: true\n        },\n\n        data: function () {\n            return [randomPath(300), randomPath(300), randomPath(300)];\n        },\n\n        // Callback for angular directive\n        angular: function (chart, opts) {\n\n            opts.scope.$on('formFieldChange', function (e, form) {\n                opts.type = form.type;\n                chart.resume();\n            });\n\n            opts.scope.$on('randomiseClick', function (e) {\n                e.preventDefault();\n                chart.each(function (serie) {\n                    serie.data(randomPath(300));\n                });\n                chart.resume();\n            });\n        }\n    };\n\n\n    function randomPath (N) {\n        // Create a random path\n        var t = d3.range(0, N, 1),\n            \u03c3 = 1,\n            \u00b5 = 0.1,\n            data = [[0, 1]],\n            norm = d3.random.normal(0, \u03c3),\n            dt;\n\n        for(var i=1; i<t.length; i++) {\n            dt = t[i] - t[i-1];\n            dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n            data[i] = [i, data[i-1][1] + dx];\n        }\n        return data;\n    }\n\n</script>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2015 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>\n"}, "api_url": "http://giottojs.org/ng/examples/multiarea.json", "slug": "multiarea", "html_url": "http://giottojs.org/examples/multiarea", "modified": "2014-12-31T08:53:16", "description": "Multiple area charts for both svg and canvas elements are supported by rendering areas in a background element.", "site": {"year": 2015, "media": "/media", "python_version": "3.4.2", "template": "partials/examples.html", "template_engine": null, "date": "2015-01-07T08-26-20", "url": "http://giottojs.org", "lux_version": "0.1.2-alpha.1", "name": "Lux"}}