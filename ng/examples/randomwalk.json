{"priority": "0", "robots": ["noindex", "nofollow"], "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\" data-highlight>\n<div class=\"page-header\">\n<h2>Random walk</h2>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-10\">\n      <div data-options='gexamples.randomwalk' style='width: 100%' giotto-chart></div>\n    </div>\n    <div class=\"col-sm-2 small\">\n      <lux-form data-options='luxforms.typeform_3lYs2'><script>if (!this.luxforms) {this.luxforms = {};} this.luxforms.typeform_3lYs2 = {\"field\": {\"id\": \"typeform_3lYs2\", \"model\": \"TypeForm\", \"showLabels\": false, \"type\": \"form\"}, \"children\": [{\"field\": {\"type\": \"fieldset\"}, \"children\": [{\"field\": {\"value\": \"svg\", \"name\": \"type\", \"options\": [\"svg\", \"canvas\"], \"type\": \"select\", \"required\": true}}]}]};</script></lux-form>\n    </div>\n  </div>\n</div>\n<h3>Javascript code</h3>\n<pre><code>//Check this example http://dc-js.github.io/dc.js/docs/stock.html\n\ngexamples.randomwalk = {\n    //type: 'canvas',\n    height: '60%',\n    min_height: 250,\n\n    serie: {\n        x: function (d) {return d.time;},\n        y: function (d) {return d.value;}\n    },\n\n    //margin: {bottom: '70%'},\n    brush: {\n        axis: 'x'\n    },\n\n    grid: {\n        show: true\n    },\n\n    line: {\n        show: true,\n        area: true\n    },\n\n    data: function () {\n        return [randomPath(3000), randomPath(3000)];\n    },\n\n    onInitx: function (chart, opts) {\n        var paper = chart.paper(),\n            brush = paper.group({margin: {top: '75%'}});\n        brush.element().classed('brush', true);\n\n    },\n\n    datax: function (chart) {\n\n        // Setup a crossfilter with some random data\n        d3.giotto.crossfilter({\n\n            data: randomPath(3000),\n\n            dimensions: ['time'],\n\n            // Callback when crossfilter is ready\n            callback: function (cf) {\n                var f = cf.dims.time.filter(),\n                    end = f.top(1)[0].time,\n                    start = f.bottom(1)[0].time,\n                    extent = [end-0.3*(end-start), end];\n                var data = cf.reduceDensity('time', 300);\n                chart.addSerie({\n                    data: data,\n                    xlabel: 'time',\n                    ylabel: 'value'\n                });\n                chart.resume();\n                //chart.paper().extent(extent);\n            }\n        });\n    },\n\n    // Callback for angular directive\n    angular: function (chart, opts) {\n\n        opts.scope.$on('formFieldChange', function (e, form) {\n            opts.type = form.type;\n            chart.resume();\n        });\n    }\n};\n\n\nfunction randomPath (N) {\n    // Create a random path\n    var t = d3.range(0, N, 1),\n        \u03c3 = 0.1,\n        \u00b5 = 0,\n        data = [{time: 0, value: 0}],\n        norm = d3.random.normal(0, \u03c3),\n        dt;\n\n    for(var i=1; i&lt;t.length; i++) {\n        dt = t[i] - t[i-1];\n        dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n        data[i] = {\n            time: i,\n            value: data[i-1].value + dx\n        };\n    }\n    return data;\n}\n</code></pre>\n</div>\n</div>\n</div>\n</div>\n<script>\n    //Check this example http://dc-js.github.io/dc.js/docs/stock.html\n\n    gexamples.randomwalk = {\n        //type: 'canvas',\n        height: '60%',\n        min_height: 250,\n\n        serie: {\n            x: function (d) {return d.time;},\n            y: function (d) {return d.value;}\n        },\n\n        //margin: {bottom: '70%'},\n        brush: {\n            axis: 'x'\n        },\n\n        grid: {\n            show: true\n        },\n\n        line: {\n            show: true,\n            area: true\n        },\n\n        data: function () {\n            return [randomPath(3000), randomPath(3000)];\n        },\n\n        onInitx: function (chart, opts) {\n            var paper = chart.paper(),\n                brush = paper.group({margin: {top: '75%'}});\n            brush.element().classed('brush', true);\n\n        },\n\n        datax: function (chart) {\n\n            // Setup a crossfilter with some random data\n            d3.giotto.crossfilter({\n\n                data: randomPath(3000),\n\n                dimensions: ['time'],\n\n                // Callback when crossfilter is ready\n                callback: function (cf) {\n                    var f = cf.dims.time.filter(),\n                        end = f.top(1)[0].time,\n                        start = f.bottom(1)[0].time,\n                        extent = [end-0.3*(end-start), end];\n                    var data = cf.reduceDensity('time', 300);\n                    chart.addSerie({\n                        data: data,\n                        xlabel: 'time',\n                        ylabel: 'value'\n                    });\n                    chart.resume();\n                    //chart.paper().extent(extent);\n                }\n            });\n        },\n\n        // Callback for angular directive\n        angular: function (chart, opts) {\n\n            opts.scope.$on('formFieldChange', function (e, form) {\n                opts.type = form.type;\n                chart.resume();\n            });\n        }\n    };\n\n\n    function randomPath (N) {\n        // Create a random path\n        var t = d3.range(0, N, 1),\n            \u03c3 = 0.1,\n            \u00b5 = 0,\n            data = [{time: 0, value: 0}],\n            norm = d3.random.normal(0, \u03c3),\n            dt;\n\n        for(var i=1; i<t.length; i++) {\n            dt = t[i] - t[i-1];\n            dx = dt*\u00b5 + \u03c3*norm()*Math.sqrt(dt);\n            data[i] = {\n                time: i,\n                value: data[i-1].value + dx\n            };\n        }\n        return data;\n    }\n\n</script>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2015 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>\n"}, "modified": "2014-12-26T12:45:27", "site": {"template_engine": null, "media": "/media", "template": "partials/examples.html", "date": "2015-01-09T21-47-07", "lux_version": "0.1.2-alpha.1", "year": 2015, "python_version": "3.4.2", "url": "http://giottojs.org", "name": "Lux"}, "author": ["Luca Sbardella"], "html_url": "http://giottojs.org/examples/randomwalk", "head": {"description": "A list of GiottoJS examples", "title": "Random walk", "twitter:card": "summary_large_image", "author": ["Luca Sbardella"]}, "slug": "randomwalk", "api_url": "http://giottojs.org/ng/examples/randomwalk.json", "name": "randomwalk", "description": "A list of GiottoJS examples", "date": "2014-12-02T00:00:00", "title": "Random walk", "content_type": "text/html"}