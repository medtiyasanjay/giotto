{"html": {"main": "<div class=\"page-header\">\n<h2>Zooming</h2>\n</div>\n\n<div style=\"width: 100px\" class=\"center-block\"><lux-form data-options='luxforms.typeform_GKdr0'><script>if (!this.luxforms) {this.luxforms = {};} this.luxforms.typeform_GKdr0 = {\"field\": {\"id\": \"typeform_GKdr0\", \"type\": \"form\", \"model\": \"TypeForm\", \"showLabels\": false}, \"children\": [{\"field\": {\"type\": \"fieldset\"}, \"children\": [{\"field\": {\"options\": [\"svg\", \"canvas\"], \"required\": true, \"type\": \"select\", \"value\": \"svg\", \"name\": \"type\"}}]}]};</script></lux-form></div>\n\n<div data-options='gexamples.zooming1' style=\"max-width: 600px\" class=\"center-block\" giotto-chart></div>\n\n<script>\n\n    gexamples.zooming1 = {\n\n        height: '70%',\n\n        grid: {\n            show: true,\n            backgroundColor: '#aec7e8'\n        },\n\n        zoom: {\n            x: true,\n            y: false\n        },\n\n        data: function (chart) {\n            var X = d3.range(-5, 5, 0.1);\n\n            return [chart.xyfunction(X, function (x) {\n                        return 1/(1+Math.exp(-x));\n                    }),\n                    chart.xyfunction(X, function (x) {\n                        var d = 1/(1+Math.exp(-x));\n                        return d*(1 - d);\n                    })];\n        },\n\n        // Callback for angular directive\n        angular: function (chart, opts) {\n\n            opts.scope.$on('formFieldChange', function (e, model) {\n                var value = model.form[model.field];\n\n                if (model.field === 'type') {\n                    // rebuild paper\n                    opts.type = value;\n                    chart.paper(true);\n                    chart.resume();\n                }\n            });\n        }\n    };\n</script>\n\n<p>Javascript code:</p>\n<pre><code>gexamples.zooming1 = {\n\n    height: '70%',\n\n    grid: {\n        show: true,\n        backgroundColor: '#aec7e8'\n    },\n\n    zoom: {\n        x: true,\n        y: false\n    },\n\n    data: function (chart) {\n        var X = d3.range(-5, 5, 0.1);\n\n        return [chart.xyfunction(X, function (x) {\n                    return 1/(1+Math.exp(-x));\n                }),\n                chart.xyfunction(X, function (x) {\n                    var d = 1/(1+Math.exp(-x));\n                    return d*(1 - d);\n                })];\n    },\n\n    // Callback for angular directive\n    angular: function (chart, opts) {\n\n        opts.scope.$on('formFieldChange', function (e, model) {\n            var value = model.form[model.field];\n\n            if (model.field === 'type') {\n                // rebuild paper\n                opts.type = value;\n                chart.paper(true);\n                chart.resume();\n            }\n        });\n    }\n};\n</code></pre>"}, "head": {"twitter:card": "summary_large_image", "title": "Zooming"}, "content_type": "text/html", "title": "Zooming", "api_url": "http://quantmind.github.io/giotto/ng/examples/zooming.json", "modified": "2014-12-07T18:44:55", "html_url": "http://quantmind.github.io/giotto/examples/zooming", "name": "zooming", "slug": "zooming", "site": {"python_version": "3.4.2", "year": 2014, "template_engine": null, "date": "2014-12-17T10-44-05", "name": "Lux", "url": "http://quantmind.github.io/giotto", "media": "/media", "lux_version": "0.1.2-alpha.1", "template": "partials/examples.md"}}