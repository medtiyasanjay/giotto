{"image": "http://quantmind.github.io/giotto/media/giottoweb/giotto.png", "name": "api_paper", "html": {"main": "<h1 id=\"paper-api\">Paper API</h1>\n<p>A <code>giotto.paper</code> is a constructor for a <code>paper</code> object, an abstraction\non top of the <code>svg</code> or the <code>canvas</code> element.</p>\n<pre><code>var paper = giotto.paper(options);\n</code></pre>\n<p>where <code>options</code> is an object containing several parameters to customise the\npaper.</p>\n<h2 id=\"identifiers\">Identifiers</h2>\n<h3 id=\"papertype\"># paper.type()</h3>\n<p>Returns the paper type, currently only <code>svg</code> is supported.</p>\n<h3 id=\"paperuid\"># paper.uid()</h3>\n<p>Returns the unique identifier for the paper in the current Html document, an integer.</p>\n<h2 id=\"dimensions\">Dimensions</h2>\n<h3 id=\"papersize\"># paper.size()</h3>\n<p>Returns a two elements array containing the pixel dimensions of the paper, including any margin</p>\n<h3 id=\"paperwidth\"># paper.width()</h3>\n<p>Width in pixels of the paper, equivalent to:</p>\n<pre><code>paper.size()[0]\n</code></pre>\n<h3 id=\"paperheight\"># paper.height()</h3>\n<p>Height in pixels of the paper, equivalent to:</p>\n<pre><code>paper.size()[1]\n</code></pre>\n<h3 id=\"paperinnerwidth\"># paper.innerWidth()</h3>\n<p>Width in pixels of the paper excluding left and right margins. Equivalent to:</p>\n<pre><code>var o = paper.options();\npaper.size()[0] - o.margin.left - o.margin.right;\n</code></pre>\n<h3 id=\"paperinnerheight\"># paper.innerHeight()</h3>\n<p>Height in pixels of the paper excluding top and bottom margins. Equivalent to:</p>\n<pre><code>var o = paper.options();\npaper.size()[1] - o.margin.top - o.margin.bottom;\n</code></pre>\n<h3 id=\"paperdimvalue\"># paper.dim(value)</h3>\n<p>Convert <code>value</code> into the x-axis internal range. There are two possible conversions:</p>\n<ul>\n<li>Convert from a 0 to 1 range - The input must be a number between 0 and 1</li>\n<li>Convert from pixels - The input must be a string ending with <code>\"px\"</code></li>\n</ul>\n<p>For example, lets assume the internal\nrange is <code>[-5, 5]</code> and the <a href=\"#paperinnerwidth\">paper.innerWidth()</a> is <code>500px</code>:</p>\n<pre><code>paper.dim(0) === -5\npaper.dim(1) === 5\npaper.dim(0.5) === 0\npaper.dim('250px') = 0\npaper.dim('500px') = 5\n</code></pre>\n<h2 id=\"options\">Options</h2>\n<p>The internal paper options can be accessed via the <code>options</code> method:</p>\n<pre><code>var options = paper.options();\n</code></pre>\n<p>There shouldn't be much need to modify the options once the paper is created,\nthis accessor is here just in case.</p>\n<h3 id=\"type\">type</h3>\n<p>Default:</p>\n<pre><code>\"svg\"\n</code></pre>\n<p>Currently only svg is fully supported.</p>\n<h3 id=\"margin\">margin</h3>\n<p>Default:</p>\n<pre><code>{top: 20, right: 20, bottom: 20, left: 20}\n</code></pre>\n<p>Set the margins for the inner part of the paper.</p>\n<h3 id=\"colors\">colors</h3>\n<p>Default:</p>\n<pre><code>d3.scale.category10().range()\n</code></pre>\n<p>An Array of colors to use by the visualization rendering the paper.</p>"}, "site": {"template_engine": null, "python_version": "3.4.2", "year": 2014, "date": "2014-12-17T13-18-38", "media": "/media", "lux_version": "0.1.2-alpha.1", "url": "http://quantmind.github.io/giotto", "template": null, "name": "Lux"}, "head": {"twitter:card": "summary_large_image", "title": "GiottoJs - paper API"}, "api_url": "http://quantmind.github.io/giotto/ng/site/api/paper.json", "content_type": "text/html", "html_url": "http://quantmind.github.io/giotto/api/paper", "modified": "2014-12-06T21:34:30", "title": "GiottoJs - paper API", "slug": "api/paper"}