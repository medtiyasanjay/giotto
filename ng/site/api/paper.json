{"api_url": "http://giottojs.org/ng/site/api/paper.json", "title": "GiottoJS - paper API", "modified": "2014-12-27T19:12:31", "image": "http://giottojs.org/media/giottoweb/giotto.png", "name": "api_paper", "html_url": "http://giottojs.org/api/paper", "html": {"main": "<div id=\"page-main\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12\">\n<div class=\"page-header\">\n<h2>GiottoJS - paper API</h2>\n</div>\n<div data-highlight>\n<p>A <code>giotto.paper</code> is a constructor for a <code>paper</code> object, an abstraction\non top of the <code>svg</code> or the <code>canvas</code> element.</p>\n<pre><code>var paper = giotto.paper(options);\n</code></pre>\n<p>where <code>options</code> is an object containing several parameters to customise the\npaper.</p>\n<h3 id=\"papertype\"># paper.type()</h3>\n<p>Returns the default <a href=\"/api/group\">group</a> type for the paper.\nIt can be either <code>svg</code> (default) or <code>canvas</code>.</p>\n<h3 id=\"paperuid\"># paper.uid()</h3>\n<p>Returns the unique identifier for the paper in the current Html document, an integer.</p>\n<h3 id=\"papersize\"># paper.size()</h3>\n<p>Returns a two elements array containing the pixel dimensions of the paper, including any margin.</p>\n<h3 id=\"paperselectfilter\"># paper.select([filter])</h3>\n<p>Select a <a href=\"/api/group\">group</a> given a filter in a similar way as <code>d3.select</code>.\nReturns the selected group or <code>undefined</code>:</p>\n<pre><code>paper.select('*')   // returns the first group in the paper\npaper.select('#plot1') // select the group with id plot1\n</code></pre>\n<h3 id=\"papereachfilter-callback\"># paper.each([filter], callback)</h3>\n<p>Invokes the specified <code>callback</code> function for each group in the paper, passing the index <code>i</code>\nwith the <code>this</code> context of the current group. If the optional <code>filter</code> parameter is given,\nit invokes the <code>callback</code> only on the mathing groups.</p>\n<pre><code>paper.each(function (i) {\n    this.yaxis.tickSize(5);\n});\n\npaper.each('.timeseries', function (i) {\n    this.yaxis.tickSize(5);\n});\n</code></pre>\n<h3 id=\"paperpickcolor\"># paper.pickColor()</h3>\n<p>Pick a color from the paper color range.</p>\n<h2 id=\"options\">Options</h2>\n<p>The internal paper options can be accessed via the <code>options</code> method:</p>\n<pre><code>var options = paper.options();\n</code></pre>\n<p>There shouldn't be much need to modify the options once the paper is created,\nthis accessor is here just in case.</p>\n<h3 id=\"type\">type</h3>\n<p>Default:</p>\n<pre><code>\"svg\"\n</code></pre>\n<p>Currently only svg is fully supported.</p>\n<h3 id=\"margin\">margin</h3>\n<p>Default:</p>\n<pre><code>{top: 20, right: 20, bottom: 20, left: 20}\n</code></pre>\n<p>Set the margins for the inner part of the paper.</p>\n<h3 id=\"colors\">colors</h3>\n<p>Default:</p>\n<pre><code>d3.scale.category10().range()\n</code></pre>\n<p>An Array of colors to use by the visualization rendering the paper.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"footer\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-sm-12 small\">\n<p>Library released under the <a href=\"http://opensource.org/licenses/BSD-3-Clause\">BSD License</a>.</p>\n<p>Copyright 2014 <a href=\"http://lucasbardella.com\">Luca Sbardella</a> and <a href=\"http://quantmind.com\">Quantmind</a></p>\n</div>\n</div>\n</div>\n</div>"}, "content_type": "text/html", "head": {"title": "GiottoJS - paper API", "twitter:card": "summary_large_image"}, "slug": "api/paper", "site": {"date": "2014-12-31T08-54-04", "media": "/media", "url": "http://giottojs.org", "template": "partials/base.html", "name": "Lux", "year": 2014, "lux_version": "0.1.2-alpha.1", "template_engine": null, "python_version": "3.4.2"}}